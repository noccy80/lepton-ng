#!/usr/bin/php
<?php

function getFiles($dir,$pattern) {
    echo "Find: [".$pattern."] ... ";
    $files = array();
    $iterator = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($dir));
    foreach ($iterator as $path) {
        if (fnmatch($pattern,$path)) $files[] = $path;
    }
    echo "OK\n";
    return $files;
}

$preload = array(
    'lepton.mvc.*' => array('lepton.mvc.*'),
    'cli.actions.*' => array('lepton.cli.action')
);

if (count($argv) < 2) {
    fputs(STDERR,"This utility will test the integrity of all the lepton scripts\n");
    $fl = getFiles('sys','*.php');
    foreach($fl as $file) {
        fputs(STDERR,shell_exec('./do-integrity-check '.$file));
    }
} else {
    require('sys/base.php');
    $fns = str_replace('sys/','',$argv[1]);
    $fns = str_replace('.php','',$fns);
    $fns = str_replace('/','.',$fns);
    if ($fns != 'base') {
        fputs(STDERR,"Testing: ".$fns."\n");
        foreach($preload as $mask=>$libs) {
            if (fnmatch($mask,$fns)) foreach($libs as $lib) using($lib);
        }
        using($fns);
    }
}
