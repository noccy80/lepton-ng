#!/usr/bin/php
<?php

require('sys/base.php');

ModuleManager::load('lepton.net.sockets');
ModuleManager::load('lepton.system.threading');

function threadfunc() {
	for($n = 0; $n < 20; $n++) { printf($n.' '); usleep(500000); }
}

class ServiceTest extends ConsoleService {
	protected $arguments = 'hD';
	function main($argc,$argv) {
		if ($this->hasArgument('D')) {
			Console::writeLn('Detaching from console...');
			$this->fork();
		} else {
			$this->servicemain();
		}
		return 0;
	}
	function servicemain() {
		Console::writeLn("I am the service!");
		$t = new Thread('threadfunc');
		$t->start();
		$s = new TcpSocket();
		$s->connect('linea.eani.net',80);
		if ($s->state == SOCKSTATE_CONNECTED) {
			$s->write("GET / HTTP/1.0\r\nhost: linea.eani.net\r\nuser-agent: leptonservice/1.0\r\n\r\n");
			while(true) { $data = $s->read(1024,$br); if ($data) break; }
			if ($br>0) Console::debug("Read %d bytes:\n%s", $br, $data);
		}
		$s->close();
		Console::debug("Waiting for thread to stop");
		while ($t->isAlive()) $this->sleep(500);
		Console::debug("Okay, thread is done!");
	}
	function signal($sig) {
		Console::debug("Caught signal %d", $sig);
	}
	function usage() {
		Console::writeLn('Usage:     %s [-options] action [arguments]', $this->getName());
	}
}

Lepton::run('ServiceTest');
