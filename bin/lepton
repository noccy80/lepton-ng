#!/usr/bin/php
<?php

require('sys/base.php');

using('lepton.utils.tokenizer');
using('lepton.cli.readline');
using('lepton.cli.action');
using('cli.*');

class LeptonUtil extends ConsoleApplication {
	static $verbose;
	protected $description = "Lepton Management Utility";
	protected $arguments = array(
		array('h','help','Show this help'),
		array('v','verbose','Verbose mode'),
		array('V','version','Show version and exit'),
		array('q','quiet','Show no progress information'),
		array('i','interactive','Interactive mode'),
		array('o:','output','Specify output file when exporting'),
		array('r:','read','Specify input file when importing'),
		array('l::','load','Load modules or namespaces')
	);
	protected $version = '1.0';
	function usage() {
		parent::usage();
		Console::writeLn();	
		Console::writeLn("Example:");
		Console::writeLn("    %s -i -llepton.base.mvc -lapp.myclass -- run myclass", $this->getName());	
		Console::writeLn();	
		Console::writeLn("Use '%s help' to show the available commands.", $this->getName());
	}
	function interactiveMode() {
		Console::writeLn(__astr("\b{Lepton Management Utility} \c{ltgray v%s}"), $this->version);
		Console::writeLn(__astr("(c) 2010, NoccyLabs.info"));

		while(true) {
			$cmds = Readline::read('lepton> ');
			Console::write(__astr('\b{}'));
			$t = new ArgumentTokenizer($cmds);
			$cmd = $t->getTokens();
			switch($cmd[0]) {
				case 'exit':
				case 'quit':
					return;
					break;
				default:
					if (!$this->doCommand($cmd)) {
						Console::writeLn("No such command: %s", join(' ',$cmd));
					}
			}
			Readline::addHistory($cmds);
		}
	}
	function doCommand($cmd) {
		if ($cmd[0] == 'help') {
			actions::listActions();
			return true;
		} else {
			$ret = actions::invoke($cmd[0],array_slice($cmd,1));
			return $ret;
		}
	}
	function showVersion() {
		Console::writeLn("%s v%s", $this->description,$this->version);
	}
	function main($argc,$argv) {

		if ($this->hasArgument('V')) return $this->showVersion();
		if ($this->hasArgument('l')) ModuleManager::load($this->getArgument('l'));
		if ($this->hasArgument('i')) return $this->interactiveMode();
		if ($this->getParameterCount() == 0) {
			$this->usage();
			return 1;
		}

		if ($this->doCommand($this->getParameterSlice(0)) == false) {
			Console::writeLn("No such command: %s", join(' ',$this->getParameterSlice(0)));
		}

		return 0;
	}
}

Lepton::run('LeptonUtil');
