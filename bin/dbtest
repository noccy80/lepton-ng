#!/usr/bin/php
<?php

if	(file_exists('sys/base.php')) require('sys/base.php');
elseif	(file_exists('../sys/base.php')) require('../sys/base.php');
else	(die("Failed to load sys/base.php"));

ModuleManager::load('lepton.db.database');
ModuleManager::load('lepton.console.readline');
ModuleManager::load('lepton.user.authentication');

class DbUtility extends ConsoleApplication {

	// Command line arguments that the application accepts.
	var $arguments = array(
		array('h','help','Show help'),
		array('v','verbose','Show verbose output')
	);

	// Main function.
	function main($argc,$argv) {

		$db = new DatabaseConnection();

		try {
			$db->exec("DROP TABLE ".LEPTON_DB_PREFIX."users");
		} catch (PDOException $e) {
			Console::writeLn($e);
		}

		try {
			$db->exec("CREATE TABLE ".LEPTON_DB_PREFIX."users (id INT PRIMARY KEY AUTO_INCREMENT, username VARCHAR(32) NOT NULL UNIQUE, passwordsalt VARCHAR(16) NULL, password VARCHAR(128) NULL, flags VARCHAR(32) NOT NULL DEFAULT '')");
		} catch (PDOException $e) {
			Console::writeLn($e);
		}

		try {
			// Generate a new user salt
			$abf = new DefaultAuthBackend();
			$salt = $abf->generateSalt();

			// Do the math
			$user = 'test';
			$pass = "spork234";
			$hash = hash('md5',$pass.$salt);
			
			// Save to database
			$db->insertRow("INSERT INTO ".LEPTON_DB_PREFIX."users (username,passwordsalt,password,flags) VALUES (%s,%s,%s,%s)", $user, $salt, $hash,'+a');
			
			$q = $db->getSingleRow("SELECT * FROM ".LEPTON_DB_PREFIX."users WHERE username=%s", $user);
			Console::writeLn("User %s, salt %s.", $q['username'], $q['passwordsalt']);

			User::authenticate(new PasswordAuthentication($q['username'],$pass));
			
		} catch (PDOException $e) {
			Console::writeLn($e);
		}
	}
}

// Run the application
Lepton::run('DbUtility');

?>
